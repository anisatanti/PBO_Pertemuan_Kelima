/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import javax.swing.JOptionPane;

/**
 *
 * @author LENOVO
 */
public class FramePaspor extends javax.swing.JFrame {
    Connection conn;
    PreparedStatement pst;
    ResultSet rs;

    String driver = "org.postgresql.Driver";
    String koneksi = "jdbc:postgresql://localhost:5432/PBO_Pertemuan5";
    String user = "postgres";
    String password = "1234";
    InputStreamReader inputStreamReader = new InputStreamReader(System.in);
    BufferedReader input = new BufferedReader(inputStreamReader);

    /**
     * 
     */
    public FramePaspor() {
        initComponents();
        koneksi(); 
        tampil();  
    }

    public void koneksi() {
    try {
        // Memuat driver PostgreSQL
        Class.forName(driver);
        
        // Membuat koneksi ke database
        conn = DriverManager.getConnection(koneksi, user, password);
        System.out.println("Koneksi berhasil!");
    } catch (Exception e) {
        e.printStackTrace();
        System.out.println("Koneksi gagal!");
    }
}
    public void tampil() {
    try {
        String sql = "SELECT * FROM DataPaspor";
        pst = conn.prepareStatement(sql); 
        rs = pst.executeQuery();
        
        tblPaspor.setModel(DbUtils.resultSetToTableModel(rs)); 
    } catch (Exception e) {
        e.printStackTrace();
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfID = new javax.swing.JTextField();
        tfNama = new javax.swing.JTextField();
        tfKwn = new javax.swing.JTextField();
        tfTgl = new com.toedter.calendar.JDateChooser();
        lk = new javax.swing.JRadioButton();
        pr = new javax.swing.JRadioButton();
        btnInsert = new javax.swing.JToggleButton();
        btnUpdate = new javax.swing.JToggleButton();
        btnDelete = new javax.swing.JToggleButton();
        btnClear = new javax.swing.JToggleButton();
        btnExit = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPaspor = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Serif", 1, 22)); // NOI18N
        jLabel1.setText("DATA PASPOR");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("ID Paspor");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Nama");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Kewarganegaraan");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Tanggal Lahir");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Jenis Kelamin");

        buttonGroup1.add(lk);
        lk.setText("Laki-Laki");

        buttonGroup1.add(pr);
        pr.setText("Perempuan");

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        tblPaspor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Paspor", "Nama", "Kewarganegaraan", "Tanggal Lahir", "Jenis Kelamin"
            }
        ));
        tblPaspor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPasporMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPaspor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lk)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pr))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(tfID, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfNama, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfKwn, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfTgl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnInsert)
                        .addGap(30, 30, 30)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete)
                        .addGap(40, 40, 40)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(291, 291, 291)
                .addComponent(jLabel1)
                .addContainerGap(419, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tfKwn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel5)
                                .addGap(6, 6, 6))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfTgl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lk)
                                    .addComponent(pr))))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnInsert)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnClear)
                            .addComponent(btnExit)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
    String id = tfID.getText();

    if (id.isEmpty()) {
    // Validasi jika ID Paspor kosong
     JOptionPane.showMessageDialog(null, "ID Paspor diisi dulu yaa!", "Input Error", JOptionPane.WARNING_MESSAGE);
        return;
    }
    int confirm = JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus data dengan ID Paspor: " + id + "?",
            "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        try {
            // SQL query untuk menghapus data
            String query = "DELETE FROM DataPaspor WHERE id_Paspor = ?";
             pst = conn.prepareStatement(query);
            pst.setString(1, id);

            // Eksekusi penghapusan
            int deleted = pst.executeUpdate();
            // Refresh tabel dan tampilkan pesan
            tampil();
            String message = (deleted > 0) ? "Data berhasil dihapus!" : "ID Paspor tidak ditemukan!";
            JOptionPane.showMessageDialog(null, message);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage(), "Error", 
                    JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
    try {
    // Variabel untuk menyimpan pesan error jika ada kolom yang kosong
    StringBuilder errorMessage = new StringBuilder();

    // Validasi setiap kolom input
    if (tfID.getText().isEmpty()) {
        errorMessage.append("ID Paspor diisi dulu yaa!\n");
    }
    if (tfNama.getText().isEmpty()) {
        errorMessage.append("Nama tidak boleh kosong!\n");
    }
    if (tfKwn.getText().isEmpty()) {
        errorMessage.append("Kewarganegaraan diisi dulu!\n");
    }
    if (tfTgl.getDate() == null) {
        errorMessage.append("Jangan lupa isi tanggal lahir!\n");
    }
    if (!lk.isSelected() && !pr.isSelected()) {
        errorMessage.append("Pilih jenis kelamin!\n");
    }

    // Jika ada pesan error, tampilkan pop-up dan hentikan proses
    if (errorMessage.length() > 0) {
        JOptionPane.showMessageDialog(null, errorMessage.toString(), "Input Error", JOptionPane.WARNING_MESSAGE);
        return; // Hentikan proses jika ada error
    }

    // Jika semua input sudah terisi, lanjutkan proses insert ke database
    String sql = "INSERT INTO DataPaspor (id_Paspor, nama_pemilik, kewarganegaraan, "
            + "tanggal_lahir, jenis_kelamin) VALUES (?, ?, ?, ?, ?)";
    pst = conn.prepareStatement(sql);

    pst.setString(1, tfID.getText());
    pst.setString(2, tfNama.getText());
    pst.setString(3, tfKwn.getText());
    pst.setDate(4, new java.sql.Date(tfTgl.getDate().getTime()));

    // Menentukan jenis kelamin berdasarkan radio button
    if (lk.isSelected()) {
        pst.setString(5, "L");
    } else {
        pst.setString(5, "P");
    }

    // Eksekusi query
    int rowsInserted = pst.executeUpdate();

    // Cek apakah data berhasil ditambahkan
    if (rowsInserted > 0) {
        // Refresh data di tabel terlebih dahulu
        tampil();
        
        // Setelah tabel diperbarui, tampilkan pop-up pesan sukses
        JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan", "Sukses", JOptionPane.INFORMATION_MESSAGE);
    }

} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    e.printStackTrace();
}
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
    if (conn == null) {
        JOptionPane.showMessageDialog(null, "Koneksi ke database tidak tersedia.");
        return;
    }
    try {
        StringBuilder errorMessage = new StringBuilder();

        // Validasi setiap kolom input
        if (tfID.getText().isEmpty()) {
            errorMessage.append("ID Paspor diisi dulu yaa!\n");
     }
        if (tfNama.getText().isEmpty()) {
            errorMessage.append("Nama tidak boleh kosong!\n");
     }
        if (tfKwn.getText().isEmpty()) {
            errorMessage.append("Kewarganegaraan diisi dulu!\n");
     }
        if (tfTgl.getDate() == null) {
            errorMessage.append("Jangan lupa isi tanggal lahir!\n");
    }
        if (!lk.isSelected() && !pr.isSelected()) {
            errorMessage.append("Pilih jenis kelamin!\n");
    }

        // Jika ada pesan error, tampilkan pop-up dan hentikan proses
        if (errorMessage.length() > 0) {
            JOptionPane.showMessageDialog(null, errorMessage.toString(), "Input Error", JOptionPane.WARNING_MESSAGE);
            return; // Hentikan proses jika ada error
    }

        // SQL query untuk update data
String sql = "UPDATE DataPaspor SET nama_pemilik=?, kewarganegaraan=?, tanggal_lahir=?, jenis_kelamin=? WHERE id_Paspor=?";
        pst = conn.prepareStatement(sql);

        // Set parameter dari komponen GUI
        pst.setString(1, tfNama.getText());
        pst.setString(2, tfKwn.getText());
        pst.setDate(3, new java.sql.Date(tfTgl.getDate().getTime()));
    
        // Set jenis kelamin berdasarkan pilihan radio button
        if (lk.isSelected()) {
            pst.setString(4, "L");
        } else {
             pst.setString(4, "P");
        }
        pst.setString(5, tfID.getText());

        // Eksekusi update
        int updated = pst.executeUpdate();
        // Tampilkan pesan jika update berhasil
        if (updated > 0) {
        // Refresh data di tabel terlebih dahulu
        tampil();
        // Setelah tabel diperbarui, tampilkan pop-up pesan sukses
        JOptionPane.showMessageDialog(null, "Data berhasil di-update", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            } else {
        JOptionPane.showMessageDialog(null, "Data gagal di-update. Periksa ID Paspor.");
        }

        } catch (Exception e) {
            e.printStackTrace();
    JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblPasporMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPasporMouseClicked
        // TODO add your handling code here:
 
     int row = tblPaspor.getSelectedRow();

    // Mengambil data dari tabel sesuai dengan indeks kolom
    String id = tblPaspor.getValueAt(row, 0).toString(); 
    String nama = tblPaspor.getValueAt(row, 1).toString(); 
    String kewarganegaraan = tblPaspor.getValueAt(row, 2).toString(); 
    String tanggalLahir = tblPaspor.getValueAt(row, 3).toString(); 
    String jenisKelamin = tblPaspor.getValueAt(row, 4).toString(); 

    // Mengisi form dengan data yang diperoleh
    tfID.setText(id);
    tfNama.setText(nama);
    tfKwn.setText(kewarganegaraan);

    // Mengonversi tanggal dari String ke Date untuk mengisi JDateChooser
    try {
        java.util.Date date = new java.text.SimpleDateFormat("yyyy-MM-dd").parse(tanggalLahir);
        tfTgl.setDate(date);
    } catch (Exception e) {
        e.printStackTrace();
    }

    // Mengisi radio button sesuai jenis kelamin
    if (jenisKelamin.equals("L")) {
        lk.setSelected(true);
    } else {
        pr.setSelected(true);
    }
    }//GEN-LAST:event_tblPasporMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        bersih(); }
   public void bersih() {
    tfID.setText("");
    tfNama.setText("");
    tfKwn.setText(""); 
    tfTgl.setDate(null);
    buttonGroup1.clearSelection(); 
    lk.setSelected(false);
    pr.setSelected(false);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FramePaspor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FramePaspor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FramePaspor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FramePaspor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FramePaspor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnClear;
    private javax.swing.JToggleButton btnDelete;
    private javax.swing.JToggleButton btnExit;
    private javax.swing.JToggleButton btnInsert;
    private javax.swing.JToggleButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton lk;
    private javax.swing.JRadioButton pr;
    private javax.swing.JTable tblPaspor;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfKwn;
    private javax.swing.JTextField tfNama;
    private com.toedter.calendar.JDateChooser tfTgl;
    // End of variables declaration//GEN-END:variables
}
